[["0", {"page_content": "Unnamed repository; edit this file 'description' to name the repository.", "metadata": {"source": "TouchPose/.git/description"}, "type": "Document"}], ["1", {"page_content": "ref: refs/heads/main", "metadata": {"source": "TouchPose/.git/HEAD"}, "type": "Document"}], ["2", {"page_content": "[core]\n\trepositoryformatversion = 0\n\tfilemode = true\n\tbare = false\n\tlogallrefupdates = true\n[remote \"origin\"]\n\turl = https://github.com/eth-siplab/TouchPose.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n[branch \"main\"]\n\tremote = origin\n\tmerge = refs/heads/main", "metadata": {"source": "TouchPose/.git/config"}, "type": "Document"}], ["3", {"page_content": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n# appropriate message if it wants to stop the commit.\n#\n# To enable this hook, rename this file to \"pre-applypatch\".\n\n. git-sh-setup\nprecommit=\"$(git rev-parse --git-path hooks/pre-commit)\"\ntest -x \"$precommit\" && exec \"$precommit\" ${1+\"$@\"}\n:", "metadata": {"source": "TouchPose/.git/hooks/pre-applypatch.sample"}, "type": "Document"}], ["4", {"page_content": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n# message file.  If the hook fails with a non-zero status,\n# the commit is aborted.\n#\n# To enable this hook, rename this file to \"prepare-commit-msg\".\n\n# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n#\n# The third example adds a Signed-off-by line to the message, that can\n# still be edited.  This is rarely a good idea.\n\nCOMMIT_MSG_FILE=$1\nCOMMIT_SOURCE=$2\nSHA1=$3", "metadata": {"source": "TouchPose/.git/hooks/prepare-commit-msg.sample"}, "type": "Document"}], ["5", {"page_content": "COMMIT_MSG_FILE=$1\nCOMMIT_SOURCE=$2\nSHA1=$3\n\n/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' \"$COMMIT_MSG_FILE\"\n\n# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n# fi", "metadata": {"source": "TouchPose/.git/hooks/prepare-commit-msg.sample"}, "type": "Document"}], ["6", {"page_content": "#!/bin/sh\n#\n# Copyright (c) 2006, 2008 Junio C Hamano\n#\n# The \"pre-rebase\" hook is run just before \"git rebase\" starts doing\n# its job, and can prevent the command from running by exiting with\n# non-zero status.\n#\n# The hook is called with the following parameters:\n#\n# $1 -- the upstream the series was forked from.\n# $2 -- the branch being rebased (or empty when rebasing the current branch).\n#\n# This sample shows how to prevent topic branches that are already\n# merged to 'next' branch from getting rebased, because allowing it\n# would result in rebasing already published history.\n\npublish=next\nbasebranch=\"$1\"\nif test \"$#\" = 2\nthen\n\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n\t;;\n*)\n\texit 0 ;# we do not interrupt others.\n\t;;\nesac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?", "metadata": {"source": "TouchPose/.git/hooks/pre-rebase.sample"}, "type": "Document"}], ["7", {"page_content": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n\n# Is topic fully merged to master?\nnot_in_master=`git rev-list --pretty=oneline ^master \"$topic\"`\nif test -z \"$not_in_master\"\nthen\n\techo >&2 \"$topic is fully merged to master; better remove it.\"\n\texit 1 ;# we could allow it, but there is no point.\nfi", "metadata": {"source": "TouchPose/.git/hooks/pre-rebase.sample"}, "type": "Document"}], ["8", {"page_content": "# Is topic ever merged to next?  If so you should not be rebasing it.\nonly_next_1=`git rev-list ^master \"^$topic\" ${publish} | sort`\nonly_next_2=`git rev-list ^master           ${publish} | sort`\nif test \"$only_next_1\" = \"$only_next_2\"\nthen\n\tnot_in_topic=`git rev-list \"^$topic\" master`\n\tif test -z \"$not_in_topic\"\n\tthen\n\t\techo >&2 \"$topic is already up to date with master\"\n\t\texit 1 ;# we could allow it, but there is no point.\n\telse\n\t\texit 0\n\tfi\nelse\n\tnot_in_next=`git rev-list --pretty=oneline ^${publish} \"$topic\"`\n\t/usr/bin/perl -e '\n\t\tmy $topic = $ARGV[0];\n\t\tmy $msg = \"* $topic has commits already merged to public branch:\\n\";\n\t\tmy (%not_in_next) = map {\n\t\t\t/^([0-9a-f]+) /;\n\t\t\t($1 => 1);\n\t\t} split(/\\n/, $ARGV[1]);\n\t\tfor my $elem (map {\n\t\t\t\t/^([0-9a-f]+) (.*)$/;\n\t\t\t\t[$1 => $2];\n\t\t\t} split(/\\n/, $ARGV[2])) {\n\t\t\tif (!exists $not_in_next{$elem->[0]}) {\n\t\t\t\tif ($msg) {\n\t\t\t\t\tprint STDERR $msg;\n\t\t\t\t\tundef $msg;\n\t\t\t\t}\n\t\t\t\tprint STDERR \" $elem->[1]\\n\";\n\t\t\t}\n\t\t}", "metadata": {"source": "TouchPose/.git/hooks/pre-rebase.sample"}, "type": "Document"}], ["9", {"page_content": "print STDERR $msg;\n\t\t\t\t\tundef $msg;\n\t\t\t\t}\n\t\t\t\tprint STDERR \" $elem->[1]\\n\";\n\t\t\t}\n\t\t}\n\t' \"$topic\" \"$not_in_next\" \"$not_in_master\"\n\texit 1\nfi", "metadata": {"source": "TouchPose/.git/hooks/pre-rebase.sample"}, "type": "Document"}], ["10", {"page_content": "<<\\DOC_END\n\nThis sample hook safeguards topic branches that have been\npublished from being rewound.\n\nThe workflow assumed here is:\n\n * Once a topic branch forks from \"master\", \"master\" is never\n   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n   branches, merge them into \"next\" branch.\n\nThe script, being an example, hardcodes the publish branch name\nto be \"next\", but it is trivial to make it configurable via\n$GIT_DIR/config mechanism.\n\nWith this workflow, you would want to know:", "metadata": {"source": "TouchPose/.git/hooks/pre-rebase.sample"}, "type": "Document"}], ["11", {"page_content": "With this workflow, you would want to know:\n\n(1) ... if a topic branch has ever been merged to \"next\".  Young\n    topic branches can have stupid mistakes you would rather\n    clean up before publishing, and things that have not been\n    merged into other branches can be easily rebased without\n    affecting other people.  But once it is published, you would\n    not want to rewind it.\n\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:", "metadata": {"source": "TouchPose/.git/hooks/pre-rebase.sample"}, "type": "Document"}], ["12", {"page_content": "Let's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n\t\t /   a---a---b A     /           /\n\t\t/   /               /           /\n\t       /   /   c---c---c---c B         /\n\t      /   /   /             \\         /\n\t     /   /   /   b---b C     \\       /\n\t    /   /   /   /             \\     /\n    ---o---o---o---o---o---o---o---o---o---o---o \"master\"\n\n\nA, B and C are topic branches.\n\n * A has one fix since it was merged up to \"next\".\n\n * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\nDOC_END", "metadata": {"source": "TouchPose/.git/hooks/pre-rebase.sample"}, "type": "Document"}], ["13", {"page_content": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info", "metadata": {"source": "TouchPose/.git/hooks/post-update.sample"}, "type": "Document"}], ["14", {"page_content": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n#\n# Config\n# ------\n# hooks.allowunannotated\n#   This boolean sets whether unannotated tags will be allowed into the\n#   repository.  By default they won't be.\n# hooks.allowdeletetag\n#   This boolean sets whether deleting tags will be allowed in the\n#   repository.  By default they won't be.\n# hooks.allowmodifytag\n#   This boolean sets whether a tag may be modified after creation. By default\n#   it won't be.\n# hooks.allowdeletebranch\n#   This boolean sets whether deleting branches will be allowed in the\n#   repository.  By default they won't be.\n# hooks.denycreatebranch\n#   This boolean sets whether remotely creating branches will be denied\n#   in the repository.  By default this is allowed.\n#\n\n# --- Command line\nrefname=\"$1\"\noldrev=\"$2\"\nnewrev=\"$3\"", "metadata": {"source": "TouchPose/.git/hooks/update.sample"}, "type": "Document"}], ["15", {"page_content": "# --- Command line\nrefname=\"$1\"\noldrev=\"$2\"\nnewrev=\"$3\"\n\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\nfi\n\nif [ -z \"$refname\" -o -z \"$oldrev\" -o -z \"$newrev\" ]; then\n\techo \"usage: $0 <ref> <oldrev> <newrev>\" >&2\n\texit 1\nfi\n\n# --- Config\nallowunannotated=$(git config --bool hooks.allowunannotated)\nallowdeletebranch=$(git config --bool hooks.allowdeletebranch)\ndenycreatebranch=$(git config --bool hooks.denycreatebranch)\nallowdeletetag=$(git config --bool hooks.allowdeletetag)\nallowmodifytag=$(git config --bool hooks.allowmodifytag)\n\n# check for no description\nprojectdesc=$(sed -e '1q' \"$GIT_DIR/description\")\ncase \"$projectdesc\" in\n\"Unnamed repository\"* | \"\")\n\techo \"*** Project description file hasn't been set\" >&2\n\texit 1\n\t;;\nesac", "metadata": {"source": "TouchPose/.git/hooks/update.sample"}, "type": "Document"}], ["16", {"page_content": "# --- Check types\n# if $newrev is 0000...0000, it's a commit to delete a ref.\nzero=\"0000000000000000000000000000000000000000\"\nif [ \"$newrev\" = \"$zero\" ]; then\n\tnewrev_type=delete\nelse\n\tnewrev_type=$(git cat-file -t $newrev)\nfi", "metadata": {"source": "TouchPose/.git/hooks/update.sample"}, "type": "Document"}], ["17", {"page_content": "case \"$refname\",\"$newrev_type\" in\n\trefs/tags/*,commit)\n\t\t# un-annotated tag\n\t\tshort_refname=${refname##refs/tags/}\n\t\tif [ \"$allowunannotated\" != \"true\" ]; then\n\t\t\techo \"*** The un-annotated tag, $short_refname, is not allowed in this repository\" >&2\n\t\t\techo \"*** Use 'git tag [ -a | -s ]' for tags you want to propagate.\" >&2\n\t\t\texit 1\n\t\tfi\n\t\t;;\n\trefs/tags/*,delete)\n\t\t# delete tag\n\t\tif [ \"$allowdeletetag\" != \"true\" ]; then\n\t\t\techo \"*** Deleting a tag is not allowed in this repository\" >&2\n\t\t\texit 1\n\t\tfi\n\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n\t\t\texit 1\n\t\tfi\n\t\t;;\n\trefs/heads/*,commit)\n\t\t# branch\n\t\tif [ \"$oldrev\" = \"$zero\" -a \"$denycreatebranch\" = \"true\" ]; then\n\t\t\techo \"*** Creating a branch is not allowed in this repository\" >&2\n\t\t\texit 1\n\t\tfi\n\t\t;;\n\trefs/heads/*,delete)", "metadata": {"source": "TouchPose/.git/hooks/update.sample"}, "type": "Document"}], ["18", {"page_content": "exit 1\n\t\tfi\n\t\t;;\n\trefs/heads/*,delete)\n\t\t# delete branch\n\t\tif [ \"$allowdeletebranch\" != \"true\" ]; then\n\t\t\techo \"*** Deleting a branch is not allowed in this repository\" >&2\n\t\t\texit 1\n\t\tfi\n\t\t;;\n\trefs/remotes/*,commit)\n\t\t# tracking branch\n\t\t;;\n\trefs/remotes/*,delete)\n\t\t# delete tracking branch\n\t\tif [ \"$allowdeletebranch\" != \"true\" ]; then\n\t\t\techo \"*** Deleting a tracking branch is not allowed in this repository\" >&2\n\t\t\texit 1\n\t\tfi\n\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac", "metadata": {"source": "TouchPose/.git/hooks/update.sample"}, "type": "Document"}], ["19", {"page_content": "# --- Finished\nexit 0", "metadata": {"source": "TouchPose/.git/hooks/update.sample"}, "type": "Document"}], ["20", {"page_content": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n# appropriate message if it wants to stop the commit.  The hook is\n# allowed to edit the commit message file.\n#\n# To enable this hook, rename this file to \"applypatch-msg\".\n\n. git-sh-setup\ncommitmsg=\"$(git rev-parse --git-path hooks/commit-msg)\"\ntest -x \"$commitmsg\" && exec \"$commitmsg\" ${1+\"$@\"}\n:", "metadata": {"source": "TouchPose/.git/hooks/applypatch-msg.sample"}, "type": "Document"}], ["21", {"page_content": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n# If you want to allow non-ASCII filenames set this variable to true.\nallownonascii=$(git config --bool hooks.allownonascii)\n\n# Redirect output to stderr.\nexec 1>&2", "metadata": {"source": "TouchPose/.git/hooks/pre-commit.sample"}, "type": "Document"}], ["22", {"page_content": "# Redirect output to stderr.\nexec 1>&2\n\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n\nTo be portable it is advisable to rename the file.\n\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi", "metadata": {"source": "TouchPose/.git/hooks/pre-commit.sample"}, "type": "Document"}], ["23", {"page_content": "git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --", "metadata": {"source": "TouchPose/.git/hooks/pre-commit.sample"}, "type": "Document"}], ["24", {"page_content": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n# commit.  The hook is allowed to edit the commit message file.\n#\n# To enable this hook, rename this file to \"commit-msg\".\n\n# Uncomment the below to add a Signed-off-by line to the message.\n# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}", "metadata": {"source": "TouchPose/.git/hooks/commit-msg.sample"}, "type": "Document"}], ["25", {"page_content": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n# $1 -- Name of the remote to which the push is being done\n# $2 -- URL to which the push is being done\n#\n# If pushing without using a named remote those arguments will be equal.\n#\n# Information about the commits which are being pushed is supplied as lines to\n# the standard input in the form:\n#\n#   <local ref> <local sha1> <remote ref> <remote sha1>\n#\n# This sample shows how to prevent push of commits where the log message starts\n# with \"WIP\" (work in progress).\n\nremote=\"$1\"\nurl=\"$2\"\n\nz40=0000000000000000000000000000000000000000", "metadata": {"source": "TouchPose/.git/hooks/pre-push.sample"}, "type": "Document"}], ["26", {"page_content": "remote=\"$1\"\nurl=\"$2\"\n\nz40=0000000000000000000000000000000000000000\n\nwhile read local_ref local_sha remote_ref remote_sha\ndo\n\tif [ \"$local_sha\" = $z40 ]\n\tthen\n\t\t# Handle delete\n\t\t:\n\telse\n\t\tif [ \"$remote_sha\" = $z40 ]\n\t\tthen\n\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_sha\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_sha..$local_sha\"\n\t\tfi\n\n\t\t# Check for WIP commit\n\t\tcommit=`git rev-list -n 1 --grep '^WIP' \"$range\"`\n\t\tif [ -n \"$commit\" ]\n\t\tthen\n\t\t\techo >&2 \"Found WIP commit in $local_ref, not pushing\"\n\t\t\texit 1\n\t\tfi\n\tfi\ndone\n\nexit 0", "metadata": {"source": "TouchPose/.git/hooks/pre-push.sample"}, "type": "Document"}], ["27", {"page_content": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n#\n# To enable this hook, rename this file to \"pre-merge-commit\".\n\n. git-sh-setup\ntest -x \"$GIT_DIR/hooks/pre-commit\" &&\n        exec \"$GIT_DIR/hooks/pre-commit\"\n:", "metadata": {"source": "TouchPose/.git/hooks/pre-merge-commit.sample"}, "type": "Document"}], ["28", {"page_content": "#!/usr/bin/perl\n\nuse strict;\nuse warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 1) and a time in nanoseconds\n# formatted as a string and outputs to stdout all files that have been\n# modified since the given time. Paths must be relative to the root of\n# the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n# 'git config core.fsmonitor .git/hooks/query-watchman'\n#\nmy ($version, $time) = @ARGV;\n\n# Check the hook interface version\n\nif ($version == 1) {\n\t# convert nanoseconds to seconds\n\t# subtract one second to make sure watchman will return all changes\n\t$time = int ($time / 1000000000) - 1;\n} else {\n\tdie \"Unsupported query-fsmonitor hook version '$version'.\\n\" .\n\t    \"Falling back to scanning...\\n\";\n}", "metadata": {"source": "TouchPose/.git/hooks/fsmonitor-watchman.sample"}, "type": "Document"}], ["29", {"page_content": "my $git_work_tree;\nif ($^O =~ 'msys' || $^O =~ 'cygwin') {\n\t$git_work_tree = Win32::GetCwd();\n\t$git_work_tree =~ tr/\\\\/\\//;\n} else {\n\trequire Cwd;\n\t$git_work_tree = Cwd::cwd();\n}\n\nmy $retry = 1;\n\nlaunch_watchman();\n\nsub launch_watchman {\n\n\tmy $pid = open2(\\*CHLD_OUT, \\*CHLD_IN, 'watchman -j --no-pretty')\n\t    or die \"open2() failed: $!\\n\" .\n\t    \"Falling back to scanning...\\n\";\n\n\t# In the query expression below we're asking for names of files that\n\t# changed since $time but were not transient (ie created after\n\t# $time but no longer exist).\n\t#\n\t# To accomplish this, we're using the \"since\" generator to use the\n\t# recency index to select candidate nodes and \"fields\" to limit the\n\t# output to file names only.\n\n\tmy $query = <<\"\tEND\";\n\t\t[\"query\", \"$git_work_tree\", {\n\t\t\t\"since\": $time,\n\t\t\t\"fields\": [\"name\"]\n\t\t}]\n\tEND\n\n\tprint CHLD_IN $query;\n\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};", "metadata": {"source": "TouchPose/.git/hooks/fsmonitor-watchman.sample"}, "type": "Document"}], ["30", {"page_content": "print CHLD_IN $query;\n\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\tdie \"Watchman: command returned no output.\\n\" .\n\t    \"Falling back to scanning...\\n\" if $response eq \"\";\n\tdie \"Watchman: command returned invalid output: $response\\n\" .\n\t    \"Falling back to scanning...\\n\" unless $response =~ /^\\{/;\n\n\tmy $json_pkg;\n\teval {\n\t\trequire JSON::XS;\n\t\t$json_pkg = \"JSON::XS\";\n\t\t1;\n\t} or do {\n\t\trequire JSON::PP;\n\t\t$json_pkg = \"JSON::PP\";\n\t};\n\n\tmy $o = $json_pkg->new->utf8->decode($response);\n\n\tif ($retry > 0 and $o->{error} and $o->{error} =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\tprint STDERR \"Adding '$git_work_tree' to watchman's watch list.\\n\";\n\t\t$retry--;\n\t\tqx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;", "metadata": {"source": "TouchPose/.git/hooks/fsmonitor-watchman.sample"}, "type": "Document"}], ["31", {"page_content": "# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tprint \"/\\0\";\n\t\teval { launch_watchman() };\n\t\texit 0;\n\t}\n\n\tdie \"Watchman: $o->{error}.\\n\" .\n\t    \"Falling back to scanning...\\n\" if $o->{error};\n\n\tbinmode STDOUT, \":utf8\";\n\tlocal $, = \"\\0\";\n\tprint @{$o->{files}};\n}", "metadata": {"source": "TouchPose/.git/hooks/fsmonitor-watchman.sample"}, "type": "Document"}], ["32", {"page_content": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n# To enable this hook, rename this file to \"pre-receive\".\n\nif test -n \"$GIT_PUSH_OPTION_COUNT\"\nthen\n\ti=0\n\twhile test \"$i\" -lt \"$GIT_PUSH_OPTION_COUNT\"\n\tdo\n\t\teval \"value=\\$GIT_PUSH_OPTION_$i\"\n\t\tcase \"$value\" in\n\t\techoback=*)\n\t\t\techo \"echo from the pre-receive-hook: ${value#*=}\" >&2\n\t\t\t;;\n\t\treject)\n\t\t\texit 1\n\t\tesac\n\t\ti=$((i + 1))\n\tdone\nfi", "metadata": {"source": "TouchPose/.git/hooks/pre-receive.sample"}, "type": "Document"}], ["33", {"page_content": "b1d48ccdaeaaefee5630b26bdfcb1cff3c562dd9", "metadata": {"source": "TouchPose/.git/refs/heads/main"}, "type": "Document"}], ["34", {"page_content": "ref: refs/remotes/origin/main", "metadata": {"source": "TouchPose/.git/refs/remotes/origin/HEAD"}, "type": "Document"}], ["35", {"page_content": "0000000000000000000000000000000000000000 b1d48ccdaeaaefee5630b26bdfcb1cff3c562dd9 Sayak Chakrabarty <pidnas94335@gmail.com> 1715061112 +0000\tclone: from https://github.com/eth-siplab/TouchPose.git", "metadata": {"source": "TouchPose/.git/logs/HEAD"}, "type": "Document"}], ["36", {"page_content": "0000000000000000000000000000000000000000 b1d48ccdaeaaefee5630b26bdfcb1cff3c562dd9 Sayak Chakrabarty <pidnas94335@gmail.com> 1715061112 +0000\tclone: from https://github.com/eth-siplab/TouchPose.git", "metadata": {"source": "TouchPose/.git/logs/refs/heads/main"}, "type": "Document"}], ["37", {"page_content": "0000000000000000000000000000000000000000 b1d48ccdaeaaefee5630b26bdfcb1cff3c562dd9 Sayak Chakrabarty <pidnas94335@gmail.com> 1715061112 +0000\tclone: from https://github.com/eth-siplab/TouchPose.git", "metadata": {"source": "TouchPose/.git/logs/refs/remotes/origin/HEAD"}, "type": "Document"}], ["38", {"page_content": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n# *.[oa]\n# *~", "metadata": {"source": "TouchPose/.git/info/exclude"}, "type": "Document"}], ["39", {"page_content": "# pack-refs with: peeled fully-peeled sorted \nb1d48ccdaeaaefee5630b26bdfcb1cff3c562dd9 refs/remotes/origin/main", "metadata": {"source": "TouchPose/.git/packed-refs"}, "type": "Document"}], ["40", {"page_content": "data/\nmodel_weights/\nmodels/\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints", "metadata": {"source": "TouchPose/.gitignore"}, "type": "Document"}], ["41", {"page_content": "# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site", "metadata": {"source": "TouchPose/.gitignore"}, "type": "Document"}], ["42", {"page_content": "# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n.idea/", "metadata": {"source": "TouchPose/.gitignore"}, "type": "Document"}], ["43", {"page_content": "Attribution-NonCommercial-ShareAlike 4.0 International\n\n=======================================================================\n\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\ndoes not provide legal services or legal advice. Distribution of\nCreative Commons public licenses does not create a lawyer-client or\nother relationship. Creative Commons makes its licenses and related\ninformation available on an \"as-is\" basis. Creative Commons gives no\nwarranties regarding its licenses, any material licensed under their\nterms and conditions, or any related information. Creative Commons\ndisclaims all liability for damages resulting from their use to the\nfullest extent possible.\n\nUsing Creative Commons Public Licenses", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["44", {"page_content": "Using Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and\nconditions that creators and other rights holders may use to share\noriginal works of authorship and other material subject to copyright\nand certain other rights specified in the public license below. The\nfollowing considerations are for informational purposes only, are not\nexhaustive, and do not form part of our licenses.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["45", {"page_content": "Considerations for licensors: Our public licenses are\n     intended for use by those authorized to give the public\n     permission to use material in ways otherwise restricted by\n     copyright and certain other rights. Our licenses are\n     irrevocable. Licensors should read and understand the terms\n     and conditions of the license they choose before applying it.\n     Licensors should also secure all rights necessary before\n     applying our licenses so that the public can reuse the\n     material as expected. Licensors should clearly mark any\n     material not subject to the license. This includes other CC-\n     licensed material, or material used under an exception or\n     limitation to copyright. More considerations for licensors:\n   wiki.creativecommons.org/Considerations_for_licensors", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["46", {"page_content": "Considerations for the public: By using one of our public\n     licenses, a licensor grants the public permission to use the\n     licensed material under specified terms and conditions. If\n     the licensor's permission is not necessary for any reason--for\n     example, because of any applicable exception or limitation to\n     copyright--then that use is not regulated by the license. Our\n     licenses grant only permissions under copyright and certain\n     other rights that a licensor has authority to grant. Use of\n     the licensed material may still be restricted for other\n     reasons, including because others have copyright or other\n     rights in the material. A licensor may make special requests,\n     such as asking that all changes be marked or described.\n     Although not required by our licenses, you are encouraged to\n     respect those requests where reasonable. More_considerations\n     for the public: \n   wiki.creativecommons.org/Considerations_for_licensees", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["47", {"page_content": "=======================================================================\n\nCreative Commons Attribution-NonCommercial-ShareAlike 4.0 International\nPublic License\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution-NonCommercial-ShareAlike 4.0 International Public License\n(\"Public License\"). To the extent this Public License may be\ninterpreted as a contract, You are granted the Licensed Rights in\nconsideration of Your acceptance of these terms and conditions, and the\nLicensor grants You such rights in consideration of benefits the\nLicensor receives from making the Licensed Material available under\nthese terms and conditions.\n\n\nSection 1 -- Definitions.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["48", {"page_content": "Section 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["49", {"page_content": "c. BY-NC-SA Compatible License means a license listed at\n     creativecommons.org/compatiblelicenses, approved by Creative\n     Commons as essentially the equivalent of this Public License.\n\n  d. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n\n  e. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["50", {"page_content": "f. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  g. License Elements means the license attributes listed in the name\n     of a Creative Commons Public License. The License Elements of this\n     Public License are Attribution, NonCommercial, and ShareAlike.\n\n  h. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  i. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  j. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["51", {"page_content": "k. NonCommercial means not primarily intended for or directed towards\n     commercial advantage or monetary compensation. For purposes of\n     this Public License, the exchange of the Licensed Material for\n     other material subject to Copyright and Similar Rights by digital\n     file-sharing or similar means is NonCommercial provided there is\n     no payment of monetary compensation in connection with the\n     exchange.\n\n  l. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["52", {"page_content": "m. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  n. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part, for NonCommercial purposes only; and", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["53", {"page_content": "b. produce, reproduce, and Share Adapted Material for\n               NonCommercial purposes only.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["54", {"page_content": "3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["55", {"page_content": "5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. Additional offer from the Licensor -- Adapted Material.\n               Every recipient of Adapted Material from You\n               automatically receives an offer from the Licensor to\n               exercise the Licensed Rights in the Adapted Material\n               under the conditions of the Adapter's License You apply.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["56", {"page_content": "c. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["57", {"page_content": "b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["58", {"page_content": "2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties, including when\n          the Licensed Material is used other than for NonCommercial\n          purposes.\n\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["59", {"page_content": "i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["60", {"page_content": "2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n  b. ShareAlike.\n\n     In addition to the conditions in Section 3(a), if You Share\n     Adapted Material You produce, the following conditions also apply.\n\n       1. The Adapter's License You apply must be a Creative Commons\n          license with the same License Elements, this version or\n          later, or a BY-NC-SA Compatible License.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["61", {"page_content": "2. You must include the text of, or the URI or hyperlink to, the\n          Adapter's License You apply. You may satisfy this condition\n          in any reasonable manner based on the medium, means, and\n          context in which You Share Adapted Material.\n\n       3. You may not offer or impose any additional or different terms\n          or conditions on, or apply any Effective Technological\n          Measures to, Adapted Material that restrict exercise of the\n          rights granted under the Adapter's License You apply.\n\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database for NonCommercial purposes\n     only;", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["62", {"page_content": "b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material,\n     including for purposes of Section 3(b); and\n\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["63", {"page_content": "Section 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["64", {"page_content": "b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\n\nSection 6 -- Term and Termination.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["65", {"page_content": "Section 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["66", {"page_content": "c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\n\nSection 8 -- Interpretation.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["67", {"page_content": "Section 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["68", {"page_content": "d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n=======================================================================", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["69", {"page_content": "Creative Commons is not a party to its public\nlicenses. Notwithstanding, Creative Commons may elect to apply one of\nits public licenses to material it publishes and in those instances\nwill be considered the \u201cLicensor.\u201d The text of the Creative Commons\npublic licenses is dedicated to the public domain under the CC0 Public\nDomain Dedication. Except for the limited purpose of indicating that\nmaterial is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["70", {"page_content": "the avoidance of doubt, this paragraph does not form part of the\npublic licenses.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["71", {"page_content": "Creative Commons may be contacted at creativecommons.org.", "metadata": {"source": "TouchPose/LICENSE"}, "type": "Document"}], ["72", {"page_content": "# Research repository for TouchPose\n\n[Karan Ahuja](https://www.karan-ahuja.com/), [Paul Streli](https://www.paulstreli.com) and [Christian Holz](https://www.christianholz.net)<br/>\n[Sensing, Interaction & Perception Lab](https://siplab.org) <br/>\nDepartment of Computer Science, ETH Z\u00fcrich\n\nThis is the research repository for the ACM UIST 2021 Paper: \"TouchPose: Hand Pose Prediction, Depth Estimation, and Touch Classification from Capacitive Images.\" This repository contains the part of the dataset we collected on pairs of capacitive touch images and depth maps of fingers and hands.\n\n[![CC BY-NC-SA 4.0][cc-by-nc-sa-shield]][cc-by-nc-sa]\n\n\n## Dataset and Models\n\nLink to [Data](https://drive.google.com/file/d/1nS7oIyf8zrnLbQjGk5-21lWq4doVUNO5/view?usp=sharing)\n\nLink to [Model](https://drive.google.com/file/d/1MMGSplsHYtw5LDdU0reRm4el661JD3gT/view?usp=sharing)\n\nDownload the above and put them alongside the \"src\" folder.\n\n\n## Code", "metadata": {"source": "TouchPose/README.md"}, "type": "Document"}], ["73", {"page_content": "Download the above and put them alongside the \"src\" folder.\n\n\n## Code\n\nThe code can be found in the src folder. Please run the \"evaluation\" jupyter notebook.\n\n## Publication reference\n\nKaran Ahuja, Paul Streli and Christian Holz. 2021. TouchPose: Hand Pose Prediction, Depth Estimation, and Touch Classification from Capacitive Images. Proceedings of the 34th Annual ACM Symposium on User Interface Software and Technology (UIST \u201921). Association for Computing Machinery, New York, NY, USA, 13 pages. DOI: https://doi.org/10.1145/3472749.3474801\n\n### Direct links\n\n* [TouchPose paper PDF](https://siplab.org/papers/uist2021-touchpose.pdf)\n* [TouchPose video](https://www.youtube.com/watch?v=CGnS18uGwC4)\n* [TouchPose project page](https://siplab.org/projects/TouchPose)\n\n### BibTeX reference", "metadata": {"source": "TouchPose/README.md"}, "type": "Document"}], ["74", {"page_content": "### BibTeX reference\n\n```\n@inproceedings{10.1145/3472749.3474801,\n  author = {Ahuja, Karan and Streli, Paul and Holz, Christian},\n  title = {TouchPose: Hand Pose Prediction, Depth Estimation, and Touch Classification from Capacitive Images},\n  year = {2021},\n  isbn = {9781450386357},\n  publisher = {Association for Computing Machinery},\n  address = {New York, NY, USA},\n  url = {https://doi.org/10.1145/3472749.3474801},\n  booktitle = {Proceedings of the 34th Annual ACM Symposium on User Interface Software and Technology},\n  numpages = {13}\n}\n```\n\n## Abstract", "metadata": {"source": "TouchPose/README.md"}, "type": "Document"}], ["75", {"page_content": "Today's touchscreen devices commonly detect the coordinates of user input using capacitive sensing. Yet, these coordinates are the mere *2D manifestations* of the more complex 3D configuration of the whole hand&mdash;a sensation that touchscreen devices so far remain oblivious to  In this work, we introduce the problem of reconstructing a 3D hand skeleton from capacitive images, which encode the sparse observations captured by touch sensors. These low-resolution images represent intensity mappings that are proportional to the distance to the user's fingers and hands.", "metadata": {"source": "TouchPose/README.md"}, "type": "Document"}], ["76", {"page_content": "We present the first dataset of capacitive images with corresponding depth maps and 3D hand pose coordinates, comprising 65,374 aligned records from 10 participants. We introduce our supervised method TouchPose, which learns a 3D hand model and a corresponding depth map using a cross-modal trained embedding from capacitive images in our dataset. We quantitatively evaluate TouchPose's accuracy in touch contact classification, depth estimation, and 3D joint reconstruction, showing that our model generalizes to hand poses it has never seen during training and that it can infer joints that lie outside the touch sensor's volume.", "metadata": {"source": "TouchPose/README.md"}, "type": "Document"}], ["77", {"page_content": "Enabled by TouchPose, we demonstrate a series of interactive apps and novel interactions on multitouch devices. These applications show TouchPose's versatile capability to serve as a *general-purpose model*, operating independent of use-case, and establishing 3D hand pose as an integral part of the input dictionary for application designers and developers. We also release our dataset, code, and model to enable future work in this domain.", "metadata": {"source": "TouchPose/README.md"}, "type": "Document"}], ["78", {"page_content": "![TouchPose illustration of estimating the 3D hand pose and the depth image from a capacitive input image.](https://siplab.org/covers/touchpose.jpg)\n\n\n## Disclaimer\n\nThe dataset and code in this repository is for research purposes only. If you plan to use either of these for commercial purposes, please [contact us](https://siplab.org/contact). If you are interested in a collaboration with us around this topic, please also [contact us](https://siplab.org/contact).\n\n\n```\nTHE PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT WITHOUT ANY\nWARRANTY. IT IS PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE\nQUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE\nDEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR\nCORRECTION.", "metadata": {"source": "TouchPose/README.md"}, "type": "Document"}], ["79", {"page_content": "IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW THE AUTHOR WILL BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL\nDAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT\nNOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES\nSUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH\nANY OTHER PROGRAMS), EVEN IF THE AUTHOR HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n```\n\n## License\n\nThis work is licensed under a [Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License][cc-by-nc-sa].\n\n[![CC BY-NC-SA 4.0][cc-by-nc-sa-image]][cc-by-nc-sa]\n\n[cc-by-nc-sa]: http://creativecommons.org/licenses/by-nc-sa/4.0/\n[cc-by-nc-sa-image]: https://licensebuttons.net/l/by-nc-sa/4.0/88x31.png\n[cc-by-nc-sa-shield]: https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-lightgrey.svg", "metadata": {"source": "TouchPose/README.md"}, "type": "Document"}], ["80", {"page_content": "{\n \"cells\": [\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 1,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import numpy as np\\n\",\n    \"import pandas as pd\\n\",\n    \"import os\\n\",\n    \"import glob\\n\",\n    \"from helper import get_data_splits, id_key, get_model\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 2,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"# Below identifiers correspond to evaluation protocol 1, 2 and 3 respectively\\n\",\n    \"# identifiers - \\\"TouchPose_crossSession\\\", \\\"TouchPose_crossSubjects\\\", \\\"TouchPose_crossGestures\\\"\\n\",\n    \"identifier = \\\"TouchPose_crossGestures\\\"\\n\",\n    \"data_path = \\\"../data/\\\"\\n\",\n    \"model_path = \\\"../models/\\\"\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 3,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"files = glob.glob(data_path+'*.pkl')\\n\",\n    \"df = pd.concat([pd.read_pickle(fp) for fp in files], ignore_index=True)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",", "metadata": {"source": "TouchPose/src/evaluation.ipynb"}, "type": "Document"}], ["81", {"page_content": "]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 4,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stderr\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"/usr/local/anaconda3/envs/py3/lib/python3.7/site-packages/ipykernel_launcher.py:2: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.\\n\",\n      \"  \\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"control = id_key[identifier]\\n\",\n    \"df_group = df.groupby([control])[\\\"cap_img\\\",\\\"depth_img\\\"]\\n\",\n    \"g_id = list(df_group.groups.keys())\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 5,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 65.0 30.418463475264414\\n\",", "metadata": {"source": "TouchPose/src/evaluation.ipynb"}, "type": "Document"}], ["82", {"page_content": "\"Accuracy 65.0 30.418463475264414\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 66.0 24.826761955218785\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 67.0 21.052762648514722\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 68.0 23.050934061623348\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 69.0 25.860948980721368\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 70.0 18.41753416478953\\n\",", "metadata": {"source": "TouchPose/src/evaluation.ipynb"}, "type": "Document"}], ["83", {"page_content": "\"Accuracy 70.0 18.41753416478953\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 71.0 16.926196823454315\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 72.0 19.044581848936193\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 73.0 14.32355895091892\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 74.0 16.59890028697684\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 75.0 26.522050507939174\\n\",", "metadata": {"source": "TouchPose/src/evaluation.ipynb"}, "type": "Document"}], ["84", {"page_content": "\"Accuracy 75.0 26.522050507939174\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 76.0 37.607740314526104\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 77.0 35.52240715930311\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 78.0 30.61358710123129\\n\",\n      \"WARNING:tensorflow:No training configuration found in the save file, so the model was *not* compiled. Compile it manually.\\n\",\n      \"Accuracy 79.0 33.17285629285531\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"depth_err = []\\n\",\n    \"for i in range(len(g_id)):\\n\",\n    \"    test_set = [g_id[i]]\\n\",\n    \"    X_test_cap, Y_test_depth= get_data_splits(df_group,test_set)\\n\",", "metadata": {"source": "TouchPose/src/evaluation.ipynb"}, "type": "Document"}], ["85", {"page_content": "\"    X_test_cap, Y_test_depth= get_data_splits(df_group,test_set)\\n\",\n    \"    model = get_model(identifier, model_path, test_set)\\n\",\n    \"    Y_out_depth = model.predict(X_test_cap, batch_size=128)\\n\",\n    \"    depth_error = np.mean(abs(Y_test_depth - Y_out_depth[:,:,:,0])) * 255\\n\",\n    \"    depth_err.append(depth_error)\\n\",\n    \"    print(\\\"Accuracy\\\", g_id[i],depth_error)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 6,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"TouchPose_crossGestures\\n\",\n      \"\\t Depth Error 24.930618971484893 SD 7.0629837953320145\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"print(identifier)\\n\",\n    \"print(\\\"\\\\t Depth Error\\\",np.mean(depth_err),\\\"SD\\\",np.std(depth_err))\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": []\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",", "metadata": {"source": "TouchPose/src/evaluation.ipynb"}, "type": "Document"}], ["86", {"page_content": "\"source\": []\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.7.10\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 4\n}", "metadata": {"source": "TouchPose/src/evaluation.ipynb"}, "type": "Document"}], ["87", {"page_content": "import tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import BatchNormalization, LayerNormalization\nfrom tensorflow.keras.layers import Conv2D\nfrom tensorflow.keras.layers import MaxPooling2D, MaxPool2D\nfrom tensorflow.keras.layers import Activation\nfrom tensorflow.keras.layers import Dropout\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.layers import Input, InputLayer\nfrom tensorflow.keras.models import Model\nfrom tensorflow import keras\n\ndef down_block(x, filters, kernel_size=(3, 3), padding=\"same\", strides=1):\n    c = keras.layers.Conv2D(filters, kernel_size, padding=padding, strides=strides, activation=\"relu\")(x)\n    c = keras.layers.Conv2D(filters, kernel_size, padding=padding, strides=strides, activation=\"relu\")(c)\n    p = keras.layers.MaxPool2D((2, 2), (2, 2))(c)\n    return c, p", "metadata": {"source": "TouchPose/src/define_model.py"}, "type": "Document"}], ["88", {"page_content": "def up_block(x, skip, filters, kernel_size=(3, 3), padding=\"same\", strides=1):\n    us = keras.layers.UpSampling2D((2, 2))(x)\n    if skip.shape[1] != us.shape[1]:\n        us = tf.pad(us, paddings=tf.constant([[0,0],[0,skip.shape[1]-us.shape[1]],[0,0],[0,0]]),mode=\"SYMMETRIC\")\n    concat = keras.layers.Concatenate()([us, skip])\n    c = keras.layers.Conv2D(filters, kernel_size, padding=padding, strides=strides, activation=\"relu\")(concat)\n    c = keras.layers.Conv2D(filters, kernel_size, padding=padding, strides=strides, activation=\"relu\")(c)\n    return c\n\ndef bottleneck(x, filters, kernel_size=(3, 3), padding=\"same\", strides=1):\n    c1 = keras.layers.Conv2D(filters, kernel_size, padding=padding, strides=strides, activation=\"relu\")(x)\n    c2 = keras.layers.Conv2D(filters, kernel_size, padding=padding, strides=strides, activation=\"relu\")(c1)\n    return c1, c2\n\ndef get_depth_model():\n\n    filters=(32, 64, 128, 256)\n    inputShape = (41, 72, 1)\n    chanDim = -1", "metadata": {"source": "TouchPose/src/define_model.py"}, "type": "Document"}], ["89", {"page_content": "filters=(32, 64, 128, 256)\n    inputShape = (41, 72, 1)\n    chanDim = -1\n\n    # define the model input\n    inputs = Input(shape=inputShape)\n\n    p0 = inputs\n    c1, p1 = down_block(p0, filters[0])\n    c2, p2 = down_block(p1, filters[1])\n    c3, p3 = down_block(p2, filters[2])\n\n    bn1, bn2 = bottleneck(p3, filters[3])\n\n    u1 = up_block(bn2, c3, filters[2])\n    u2 = up_block(u1, c2, filters[1])\n    u3 = up_block(u2, c1, filters[0])\n\n    x_depth = Conv2D(1, (1, 1), padding=\"same\", name='regression_depth')(u3)\n\n    model = Model(inputs=inputs, outputs=x_depth)\n\n    return model\n\n\ndef create_MultiTaskTouchPoseNet(height, width, depth, filters=(32, 64, 128, 256)):\n    inputShape = (height, width, depth)\n\n    chanDim = -1\n    # define the model input\n    inputs = Input(shape=inputShape)", "metadata": {"source": "TouchPose/src/define_model.py"}, "type": "Document"}], ["90", {"page_content": "chanDim = -1\n    # define the model input\n    inputs = Input(shape=inputShape)\n\n    p0 = inputs\n    c1, p1 = down_block(p0, filters[0])\n    c2, p2 = down_block(p1, filters[1])\n    c3, p3 = down_block(p2, filters[2])\n    bn1, bn2 = bottleneck(p3, filters[3])\n    u1 = up_block(bn2, c3, filters[2])\n    u2 = up_block(u1, c2, filters[1])\n    u3 = up_block(u2, c1, filters[0])\n\n\n    # flatten the volume, then FC => RELU => BN => DROPOUT\n    x = Flatten()(bn1)\n    x = Dense(256)(x)\n    x = Activation(\"relu\")(x)\n    x = BatchNormalization(axis=chanDim)(x)\n    x = Dropout(0.5)(x)\n    # apply another FC layer, this one to match the number of nodes\n    # coming out of the MLP\n    fc = Dense(128, activation='relu')(x)", "metadata": {"source": "TouchPose/src/define_model.py"}, "type": "Document"}], ["91", {"page_content": "x_vis = Dense(1, activation='sigmoid', name='visibility')(fc)\n    x_regress = Dense(63, activation=\"linear\", name='regression')(fc)\n    x_depth = Conv2D(1, (1, 1), padding=\"same\", name='regression_depth')(u3)\n    model = Model(inputs=inputs, outputs=[ x_regress, x_vis, x_depth])\n    return model", "metadata": {"source": "TouchPose/src/define_model.py"}, "type": "Document"}], ["92", {"page_content": "import numpy as np\nfrom tensorflow.keras.models import load_model\n\nid_key = {\n    \"TouchPose_crossSession\" : \"session_id\",\n    \"TouchPose_crossSubjects\" : \"subject_id\",\n    \"TouchPose_crossGestures\" : \"gesture_id\"\n}\n\ndef get_data_splits(df, id_arr):\n    X_cap, Y_depth = None, None\n    for p_id in id_arr:\n        df_extract = df.get_group(p_id)\n        x_cap_img = np.array(df_extract[\"cap_img\"].tolist())\n        y_depth_img = np.array(df_extract[\"depth_img\"].tolist())\n\n        x_cap_img[x_cap_img < 0] = 0\n        maxVal = 1400\n        x_cap_img = x_cap_img/maxVal\n        y_depth_img = y_depth_img/255\n\n        if X_cap is None:\n            X_cap = x_cap_img\n            Y_depth = y_depth_img\n        else:\n            X_cap = np.vstack((X_cap, x_cap_img))\n            Y_depth = np.vstack((Y_depth, y_depth_img))\n    return X_cap, Y_depth", "metadata": {"source": "TouchPose/src/helper.py"}, "type": "Document"}], ["93", {"page_content": "def get_model(identifier, model_path, test_set):\n    if isinstance(test_set[0], str):\n        model = load_model(model_path+\"/\"+identifier+\"/\"+test_set[0]+\".hdf5\")\n    else:\n        model = load_model(model_path+\"/\"+identifier+\"/\"+str(int(test_set[0]))+\".hdf5\")\n    return model", "metadata": {"source": "TouchPose/src/helper.py"}, "type": "Document"}]]